/*
 * DressCollationService API
 *
 * A REST API for managing clothing items and collations for users.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Collation {
    /// Unique identifier for the collation.
    #[serde(rename = "id")]
    pub id: String,
    /// Name of the collation.
    #[serde(rename = "name")]
    pub name: String,
    /// A list of clothing items in the collation.
    #[serde(rename = "clothes", skip_serializing_if = "Option::is_none")]
    pub clothes: Option<Vec<crate::models::Clothing>>,
    /// A list of seasons in which the collation is appropriate to wear.
    #[serde(rename = "seasons", skip_serializing_if = "Option::is_none")]
    pub seasons: Option<Vec<i32>>,
    /// A list of image URLs associated with the collation.
    #[serde(rename = "pictures", skip_serializing_if = "Option::is_none")]
    pub pictures: Option<Vec<String>>,
    /// Description of the collation.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Rating of the clothing item (0-5).
    #[serde(rename = "rating", skip_serializing_if = "Option::is_none")]
    pub rating: Option<i32>,
    /// A list of tags associated with the collation.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
}

impl Collation {
    pub fn new(id: String, name: String) -> Collation {
        Collation {
            id,
            name,
            clothes: None,
            seasons: None,
            pictures: None,
            description: None,
            rating: None,
            tags: None,
        }
    }
}


