/*
 * DressCollationService API
 *
 * A REST API for managing clothing items and collations for users.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Folder {
    /// Unique identifier for the folder.
    #[serde(rename = "id")]
    pub id: String,
    /// Name of the folder.
    #[serde(rename = "name")]
    pub name: String,
    /// A list of clothing items.
    #[serde(rename = "clothes", skip_serializing_if = "Option::is_none")]
    pub clothes: Option<Vec<crate::models::Clothing>>,
    /// A list of collations.
    #[serde(rename = "collations", skip_serializing_if = "Option::is_none")]
    pub collations: Option<Vec<crate::models::Collation>>,
    /// A list of sub-folders in the folder.
    #[serde(rename = "sub_folders", skip_serializing_if = "Option::is_none")]
    pub sub_folders: Option<Vec<crate::models::Folder>>,
}

impl Folder {
    pub fn new(id: String, name: String) -> Folder {
        Folder {
            id,
            name,
            clothes: None,
            collations: None,
            sub_folders: None,
        }
    }
}


